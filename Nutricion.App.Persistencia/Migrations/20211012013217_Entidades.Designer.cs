// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nutricion.App.Persistencia;

namespace Nutricion.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20211012013217_Entidades")]
    partial class Entidades
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Nutricion.App.Dominio.Historia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Diagnostico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeroRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Historias");
                });

            modelBuilder.Entity("Nutricion.App.Dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("Nutricion.App.Dominio.SugerenciaCuidado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HistoriaId")
                        .HasColumnType("int");

                    b.Property<int?>("PacienteId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HistoriaId");

                    b.HasIndex("PacienteId");

                    b.ToTable("SugerenciasCuidados");
                });

            modelBuilder.Entity("Nutricion.App.Dominio.Valoracion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("CaloriasConsumidas")
                        .HasColumnType("real");

                    b.Property<float>("Estatura")
                        .HasColumnType("real");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HistoriaId")
                        .HasColumnType("int");

                    b.Property<int?>("PacienteId")
                        .HasColumnType("int");

                    b.Property<float>("Peso")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("HistoriaId");

                    b.HasIndex("PacienteId");

                    b.ToTable("Valoraciones");
                });

            modelBuilder.Entity("Nutricion.App.Dominio.Coach", b =>
                {
                    b.HasBaseType("Nutricion.App.Dominio.Persona");

                    b.Property<string>("Especialidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroCertificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Coach");
                });

            modelBuilder.Entity("Nutricion.App.Dominio.Nutricionista", b =>
                {
                    b.HasBaseType("Nutricion.App.Dominio.Persona");

                    b.Property<string>("TarjetaProfesional")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Nutricionista");
                });

            modelBuilder.Entity("Nutricion.App.Dominio.Paciente", b =>
                {
                    b.HasBaseType("Nutricion.App.Dominio.Persona");

                    b.Property<int?>("CoachId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<int?>("HistoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Latitud")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitud")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NutricionistaId")
                        .HasColumnType("int");

                    b.HasIndex("CoachId");

                    b.HasIndex("HistoriaId");

                    b.HasIndex("NutricionistaId");

                    b.HasDiscriminator().HasValue("Paciente");
                });

            modelBuilder.Entity("Nutricion.App.Dominio.SugerenciaCuidado", b =>
                {
                    b.HasOne("Nutricion.App.Dominio.Historia", null)
                        .WithMany("SugerenciasCuidados")
                        .HasForeignKey("HistoriaId");

                    b.HasOne("Nutricion.App.Dominio.Paciente", null)
                        .WithMany("SugerenciasCuidados")
                        .HasForeignKey("PacienteId");
                });

            modelBuilder.Entity("Nutricion.App.Dominio.Valoracion", b =>
                {
                    b.HasOne("Nutricion.App.Dominio.Historia", null)
                        .WithMany("Valoraciones")
                        .HasForeignKey("HistoriaId");

                    b.HasOne("Nutricion.App.Dominio.Paciente", null)
                        .WithMany("Valoraciones")
                        .HasForeignKey("PacienteId");
                });

            modelBuilder.Entity("Nutricion.App.Dominio.Paciente", b =>
                {
                    b.HasOne("Nutricion.App.Dominio.Coach", "Coach")
                        .WithMany()
                        .HasForeignKey("CoachId");

                    b.HasOne("Nutricion.App.Dominio.Historia", "Historia")
                        .WithMany()
                        .HasForeignKey("HistoriaId");

                    b.HasOne("Nutricion.App.Dominio.Nutricionista", "Nutricionista")
                        .WithMany()
                        .HasForeignKey("NutricionistaId");

                    b.Navigation("Coach");

                    b.Navigation("Historia");

                    b.Navigation("Nutricionista");
                });

            modelBuilder.Entity("Nutricion.App.Dominio.Historia", b =>
                {
                    b.Navigation("SugerenciasCuidados");

                    b.Navigation("Valoraciones");
                });

            modelBuilder.Entity("Nutricion.App.Dominio.Paciente", b =>
                {
                    b.Navigation("SugerenciasCuidados");

                    b.Navigation("Valoraciones");
                });
#pragma warning restore 612, 618
        }
    }
}
